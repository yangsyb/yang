/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head || head->next ==nullptr){return head;}
        ListNode* odd = head;
        ListNode* evenhead = head->next;
        ListNode* even = head->next;
        while(even->next!=nullptr)
        {
            odd->next = even->next;
            odd = even->next;
            if(odd->next!=nullptr)
            {even->next = odd->next;
            even = odd->next;}
            else{odd->next = evenhead;
                even->next = nullptr;}
        }
        odd->next = evenhead;
                even->next = nullptr;
        return head;
        
    }
};
