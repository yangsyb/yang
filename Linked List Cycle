/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head || head->next == nullptr) return 0;
        ListNode *quick = head;
        ListNode *slow = head;
        while(quick && slow)
        {
            if(quick->next == nullptr) return 0;
            else if(quick->next->next == nullptr) return 0;
            quick = quick->next->next;
            slow = slow->next;
            if(quick == slow)
                return 1;
        }
        return 0;
    }
};
